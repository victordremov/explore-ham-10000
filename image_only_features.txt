defaultdict(<class 'list'>, {'cross-entropy': [0.6617240041170769, 0.5568999121023505, 0.5289324240263916, 0.5334350105624955, 0.5003185848137922, 0.5110704580818669, 0.5199897634775603, 0.4955374779542358, 0.4681765810020903, 0.47080086285773975], 'confusion-matrix': [tensor([[2.8000e+01, 2.4000e+01, 2.0000e+00, 0.0000e+00, 3.6000e+01, 1.1500e+02,
         0.0000e+00],
        [6.0000e+00, 1.2600e+02, 6.0000e+00, 0.0000e+00, 1.5000e+01, 1.4100e+02,
         0.0000e+00],
        [6.0000e+00, 2.2000e+01, 6.9000e+01, 0.0000e+00, 1.1000e+02, 4.4700e+02,
         0.0000e+00],
        [1.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 5.0000e+00, 5.8000e+01,
         0.0000e+00],
        [8.0000e+00, 1.7000e+01, 8.0000e+00, 0.0000e+00, 1.3400e+02, 3.8600e+02,
         0.0000e+00],
        [2.0000e+00, 2.4000e+01, 5.0000e+00, 0.0000e+00, 5.4000e+01, 4.7780e+03,
         0.0000e+00],
        [0.0000e+00, 6.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 8.2000e+01,
         0.0000e+00]]), tensor([[6.6000e+01, 1.7000e+01, 4.4000e+01, 0.0000e+00, 3.7000e+01, 4.0000e+01,
         1.0000e+00],
        [8.0000e+00, 1.4100e+02, 5.1000e+01, 0.0000e+00, 2.1000e+01, 7.0000e+01,
         3.0000e+00],
        [1.0000e+01, 1.6000e+01, 3.4600e+02, 0.0000e+00, 7.7000e+01, 2.0100e+02,
         4.0000e+00],
        [1.0000e+00, 3.0000e+00, 1.3000e+01, 9.0000e+00, 1.0000e+00, 3.7000e+01,
         2.0000e+00],
        [1.4000e+01, 1.1000e+01, 8.9000e+01, 0.0000e+00, 2.2100e+02, 2.1500e+02,
         3.0000e+00],
        [7.0000e+00, 2.1000e+01, 1.0800e+02, 0.0000e+00, 1.4000e+02, 4.5790e+03,
         8.0000e+00],
        [1.0000e+00, 2.0000e+00, 3.0000e+00, 0.0000e+00, 1.0000e+00, 3.3000e+01,
         4.8000e+01]]), tensor([[9.5000e+01, 1.7000e+01, 1.2000e+01, 0.0000e+00, 2.6000e+01, 5.5000e+01,
         0.0000e+00],
        [2.2000e+01, 1.5200e+02, 1.4000e+01, 0.0000e+00, 1.7000e+01, 8.7000e+01,
         2.0000e+00],
        [1.9000e+01, 1.9000e+01, 1.9400e+02, 0.0000e+00, 8.1000e+01, 3.4100e+02,
         0.0000e+00],
        [5.0000e+00, 4.0000e+00, 5.0000e+00, 3.0000e+00, 2.0000e+00, 4.6000e+01,
         1.0000e+00],
        [2.4000e+01, 6.0000e+00, 3.3000e+01, 0.0000e+00, 1.8000e+02, 3.1000e+02,
         0.0000e+00],
        [1.3000e+01, 1.6000e+01, 2.0000e+01, 0.0000e+00, 5.2000e+01, 4.7590e+03,
         3.0000e+00],
        [1.0000e+00, 0.0000e+00, 1.0000e+00, 0.0000e+00, 1.0000e+00, 4.4000e+01,
         4.1000e+01]]), tensor([[6.0000e+01, 2.6000e+01, 6.1000e+01, 0.0000e+00, 3.0000e+00, 5.5000e+01,
         0.0000e+00],
        [7.0000e+00, 1.6700e+02, 5.8000e+01, 0.0000e+00, 0.0000e+00, 6.0000e+01,
         2.0000e+00],
        [5.0000e+00, 1.9000e+01, 4.0500e+02, 1.0000e+00, 4.0000e+00, 2.2000e+02,
         0.0000e+00],
        [2.0000e+00, 1.0000e+00, 1.6000e+01, 5.0000e+00, 2.0000e+00, 3.8000e+01,
         2.0000e+00],
        [1.5000e+01, 8.0000e+00, 1.5600e+02, 1.0000e+00, 4.6000e+01, 3.2400e+02,
         3.0000e+00],
        [5.0000e+00, 2.2000e+01, 1.3300e+02, 0.0000e+00, 7.0000e+00, 4.6910e+03,
         5.0000e+00],
        [0.0000e+00, 4.0000e+00, 2.0000e+00, 0.0000e+00, 0.0000e+00, 3.4000e+01,
         4.8000e+01]]), tensor([[8.3000e+01, 3.9000e+01, 4.0000e+01, 0.0000e+00, 1.7000e+01, 2.5000e+01,
         1.0000e+00],
        [1.1000e+01, 1.9900e+02, 3.4000e+01, 0.0000e+00, 5.0000e+00, 4.1000e+01,
         4.0000e+00],
        [1.5000e+01, 3.4000e+01, 3.7900e+02, 0.0000e+00, 3.9000e+01, 1.8700e+02,
         0.0000e+00],
        [2.0000e+00, 6.0000e+00, 1.2000e+01, 6.0000e+00, 2.0000e+00, 3.8000e+01,
         0.0000e+00],
        [1.3000e+01, 2.4000e+01, 1.0000e+02, 0.0000e+00, 1.5400e+02, 2.6000e+02,
         2.0000e+00],
        [8.0000e+00, 4.5000e+01, 1.0500e+02, 0.0000e+00, 6.0000e+01, 4.6370e+03,
         8.0000e+00],
        [0.0000e+00, 4.0000e+00, 4.0000e+00, 0.0000e+00, 0.0000e+00, 2.6000e+01,
         5.4000e+01]]), tensor([[4.8000e+01, 2.7000e+01, 7.4000e+01, 1.0000e+00, 2.8000e+01, 2.6000e+01,
         1.0000e+00],
        [5.0000e+00, 1.8000e+02, 6.0000e+01, 0.0000e+00, 1.1000e+01, 3.7000e+01,
         1.0000e+00],
        [6.0000e+00, 1.9000e+01, 4.3300e+02, 0.0000e+00, 7.9000e+01, 1.1700e+02,
         0.0000e+00],
        [0.0000e+00, 4.0000e+00, 1.5000e+01, 1.6000e+01, 4.0000e+00, 2.7000e+01,
         0.0000e+00],
        [6.0000e+00, 1.8000e+01, 1.2900e+02, 1.0000e+00, 2.3000e+02, 1.6700e+02,
         2.0000e+00],
        [3.0000e+00, 3.9000e+01, 1.8300e+02, 0.0000e+00, 1.5800e+02, 4.4780e+03,
         2.0000e+00],
        [0.0000e+00, 4.0000e+00, 8.0000e+00, 0.0000e+00, 1.0000e+00, 2.7000e+01,
         4.8000e+01]]), tensor([[9.3000e+01, 1.0000e+01, 2.5000e+01, 0.0000e+00, 2.0000e+00, 7.5000e+01,
         0.0000e+00],
        [1.2000e+01, 1.6900e+02, 2.2000e+01, 0.0000e+00, 1.0000e+00, 9.0000e+01,
         0.0000e+00],
        [8.0000e+00, 1.6000e+01, 3.1100e+02, 1.0000e+00, 1.7000e+01, 3.0100e+02,
         0.0000e+00],
        [5.0000e+00, 4.0000e+00, 6.0000e+00, 5.0000e+00, 1.0000e+00, 4.5000e+01,
         0.0000e+00],
        [2.1000e+01, 1.5000e+01, 7.3000e+01, 0.0000e+00, 8.0000e+01, 3.6400e+02,
         0.0000e+00],
        [8.0000e+00, 2.1000e+01, 3.9000e+01, 0.0000e+00, 5.0000e+00, 4.7900e+03,
         0.0000e+00],
        [1.0000e+00, 4.0000e+00, 1.0000e+00, 0.0000e+00, 1.0000e+00, 4.9000e+01,
         3.2000e+01]]), tensor([[7.1000e+01, 1.1000e+01, 4.6000e+01, 7.0000e+00, 1.7000e+01, 5.3000e+01,
         0.0000e+00],
        [9.0000e+00, 1.3800e+02, 3.7000e+01, 1.4000e+01, 8.0000e+00, 8.6000e+01,
         2.0000e+00],
        [1.2000e+01, 6.0000e+00, 3.6300e+02, 1.2000e+01, 3.4000e+01, 2.2700e+02,
         0.0000e+00],
        [0.0000e+00, 3.0000e+00, 9.0000e+00, 2.3000e+01, 0.0000e+00, 3.1000e+01,
         0.0000e+00],
        [8.0000e+00, 8.0000e+00, 9.4000e+01, 1.3000e+01, 1.2300e+02, 3.0500e+02,
         2.0000e+00],
        [2.0000e+00, 7.0000e+00, 9.4000e+01, 7.0000e+00, 4.1000e+01, 4.7090e+03,
         3.0000e+00],
        [0.0000e+00, 3.0000e+00, 3.0000e+00, 2.0000e+00, 0.0000e+00, 2.3000e+01,
         5.7000e+01]]), tensor([[1.0300e+02, 2.2000e+01, 2.1000e+01, 3.0000e+00, 2.1000e+01, 3.5000e+01,
         0.0000e+00],
        [1.4000e+01, 1.8600e+02, 2.2000e+01, 1.0000e+00, 1.4000e+01, 5.5000e+01,
         2.0000e+00],
        [2.0000e+01, 2.1000e+01, 2.8800e+02, 1.0000e+00, 9.7000e+01, 2.2500e+02,
         2.0000e+00],
        [3.0000e+00, 3.0000e+00, 8.0000e+00, 1.5000e+01, 2.0000e+00, 3.4000e+01,
         1.0000e+00],
        [1.7000e+01, 1.9000e+01, 5.2000e+01, 1.0000e+00, 2.4000e+02, 2.2000e+02,
         4.0000e+00],
        [7.0000e+00, 2.9000e+01, 5.6000e+01, 0.0000e+00, 9.9000e+01, 4.6640e+03,
         8.0000e+00],
        [2.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 0.0000e+00, 2.3000e+01,
         6.3000e+01]]), tensor([[9.4000e+01, 1.6000e+01, 4.4000e+01, 1.0000e+00, 2.0000e+01, 3.0000e+01,
         0.0000e+00],
        [1.8000e+01, 1.7500e+02, 4.0000e+01, 0.0000e+00, 1.2000e+01, 4.4000e+01,
         5.0000e+00],
        [1.7000e+01, 1.5000e+01, 3.9100e+02, 1.0000e+00, 5.4000e+01, 1.7300e+02,
         3.0000e+00],
        [2.0000e+00, 3.0000e+00, 9.0000e+00, 1.4000e+01, 1.0000e+00, 3.6000e+01,
         1.0000e+00],
        [1.8000e+01, 1.0000e+01, 9.9000e+01, 3.0000e+00, 2.2000e+02, 2.0300e+02,
         0.0000e+00],
        [8.0000e+00, 1.9000e+01, 1.0800e+02, 0.0000e+00, 1.0000e+02, 4.6210e+03,
         7.0000e+00],
        [0.0000e+00, 2.0000e+00, 4.0000e+00, 0.0000e+00, 2.0000e+00, 1.7000e+01,
         6.3000e+01]])]}).
Validation metrics: defaultdict(<class 'list'>, {'cross-entropy': [0.6680494456725268, 0.5842225061682174, 0.5703881273627122, 0.5612830645747613, 0.5065207121522232, 0.5402404384879542, 0.5617611304504007, 0.5384606582971622, 0.534925476255187, 0.5098846479352698], 'confusion-matrix': [tensor([[  4.,   2.,   1.,   0.,   2.,  14.,   0.],
        [  1.,  12.,   0.,   0.,   1.,  19.,   0.],
        [  2.,   4.,   9.,   0.,  11.,  47.,   0.],
        [  0.,   1.,   0.,   0.,   0.,   6.,   0.],
        [  2.,   0.,   1.,   0.,  20.,  38.,   0.],
        [  0.,   2.,   1.,   0.,   2., 535.,   0.],
        [  0.,   1.,   0.,   0.,   0.,   9.,   0.]]), tensor([[  6.,   3.,   7.,   0.,   4.,   3.,   0.],
        [  1.,  16.,   6.,   0.,   2.,   8.,   0.],
        [  1.,   2.,  33.,   0.,  10.,  26.,   1.],
        [  1.,   0.,   1.,   0.,   1.,   4.,   0.],
        [  2.,   0.,   8.,   0.,  30.,  21.,   0.],
        [  1.,   4.,  14.,   0.,  13., 508.,   0.],
        [  0.,   0.,   0.,   0.,   1.,   4.,   5.]]), tensor([[ 13.,   4.,   1.,   0.,   3.,   2.,   0.],
        [  4.,  13.,   2.,   0.,   3.,  11.,   0.],
        [  4.,   1.,  15.,   0.,   8.,  44.,   1.],
        [  0.,   1.,   1.,   0.,   0.,   4.,   1.],
        [  2.,   0.,   1.,   0.,  23.,  35.,   0.],
        [  1.,   2.,   3.,   0.,   7., 527.,   0.],
        [  0.,   1.,   0.,   0.,   0.,   4.,   5.]]), tensor([[ 11.,   6.,   4.,   0.,   0.,   2.,   0.],
        [  0.,  14.,   7.,   0.,   1.,  11.,   0.],
        [  2.,   4.,  38.,   0.,   0.,  29.,   0.],
        [  0.,   0.,   4.,   0.,   0.,   3.,   0.],
        [  3.,   0.,  22.,   0.,   3.,  33.,   0.],
        [  1.,   6.,  18.,   0.,   1., 514.,   0.],
        [  0.,   0.,   1.,   0.,   0.,   5.,   4.]]), tensor([[ 10.,   6.,   5.,   0.,   0.,   2.,   0.],
        [  2.,  17.,   3.,   0.,   2.,   9.,   0.],
        [  2.,   7.,  32.,   0.,   6.,  26.,   0.],
        [  1.,   0.,   1.,   0.,   0.,   4.,   1.],
        [  3.,   2.,   8.,   0.,  23.,  25.,   0.],
        [  0.,   5.,  10.,   0.,   5., 520.,   0.],
        [  0.,   0.,   0.,   0.,   1.,   3.,   6.]]), tensor([[  9.,   4.,   6.,   0.,   4.,   0.,   0.],
        [  0.,  20.,   6.,   0.,   3.,   4.,   0.],
        [  0.,   3.,  40.,   0.,   9.,  21.,   0.],
        [  0.,   2.,   2.,   1.,   0.,   2.,   0.],
        [  2.,   0.,  11.,   0.,  29.,  19.,   0.],
        [  0.,   6.,  27.,   0.,  22., 485.,   0.],
        [  0.,   0.,   0.,   0.,   1.,   5.,   4.]]), tensor([[ 14.,   5.,   2.,   0.,   1.,   1.,   0.],
        [  3.,  14.,   4.,   0.,   0.,  12.,   0.],
        [  4.,   4.,  22.,   0.,   2.,  41.,   0.],
        [  0.,   1.,   0.,   0.,   0.,   6.,   0.],
        [  4.,   1.,   4.,   0.,   8.,  44.,   0.],
        [  1.,   1.,   7.,   0.,   4., 527.,   0.],
        [  0.,   0.,   0.,   0.,   0.,   9.,   1.]]), tensor([[ 12.,   2.,   4.,   0.,   1.,   4.,   0.],
        [  1.,  15.,   5.,   2.,   2.,   8.,   0.],
        [  1.,   2.,  33.,   0.,   4.,  33.,   0.],
        [  0.,   1.,   0.,   2.,   0.,   3.,   1.],
        [  1.,   1.,   7.,   1.,  21.,  30.,   0.],
        [  0.,   4.,  20.,   2.,   3., 511.,   0.],
        [  0.,   0.,   0.,   0.,   1.,   6.,   3.]]), tensor([[  9.,   6.,   6.,   0.,   1.,   1.,   0.],
        [  3.,  18.,   2.,   0.,   4.,   6.,   0.],
        [  6.,   3.,  26.,   0.,  11.,  27.,   0.],
        [  0.,   0.,   2.,   1.,   0.,   3.,   1.],
        [  4.,   0.,   2.,   0.,  33.,  22.,   0.],
        [  0.,   8.,   6.,   0.,  17., 509.,   0.],
        [  0.,   0.,   0.,   0.,   0.,   4.,   6.]]), tensor([[ 10.,   2.,   7.,   0.,   2.,   2.,   0.],
        [  4.,  14.,   7.,   0.,   1.,   7.,   0.],
        [  4.,   1.,  41.,   0.,   3.,  24.,   0.],
        [  0.,   0.,   3.,   1.,   1.,   2.,   0.],
        [  3.,   0.,   9.,   0.,  26.,  22.,   1.],
        [  0.,   3.,  19.,   0.,  11., 507.,   0.],
        [  0.,   0.,   0.,   0.,   0.,   6.,   4.]])]}).
Confusion matrix: ConfusionMatrixDTO(matrix_data=array([[ 10.,   6.,   5.,   0.,   0.,   2.,   0.],
       [  2.,  17.,   3.,   0.,   2.,   9.,   0.],
       [  2.,   7.,  32.,   0.,   6.,  26.,   0.],
       [  1.,   0.,   1.,   0.,   0.,   4.,   1.],
       [  3.,   2.,   8.,   0.,  23.,  25.,   0.],
       [  0.,   5.,  10.,   0.,   5., 520.,   0.],
       [  0.,   0.,   0.,   0.,   1.,   3.,   6.]], dtype=float32), class_labels=['akiec', 'bcc', 'bkl', 'df', 'mel', 'nv', 'vasc']).